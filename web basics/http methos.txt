HTTP (Hypertext Transfer Protocol) defines several methods (also known as verbs or operations) that indicate the desired action to be performed on a resource. Here are the commonly used HTTP methods along with examples of their usage:

GET:

Purpose: Retrieve data from the server.
Example: Requesting a webpage from a server.
Usage:
GET /index.html HTTP/1.1
Host: www.example.com

POST:

Purpose: Send data to the server to create or update a resource.
Example: Submitting a form, uploading a file.
Usage:
POST /submit_form HTTP/1.1
Host: www.example.com
Content-Type: application/x-www-form-urlencoded
username=johndoe&password=secretpassword

PUT:

Purpose: Update a resource on the server.
Example: Updating a user's profile.
Usage:
PUT /users/123 HTTP/1.1
Host: www.example.com
Content-Type: application/json
{"username": "newusername", "email": "newemail@example.com"}

DELETE:

Purpose: Delete a resource on the server.
Example: Deleting a specific record from a database.
Usage:
DELETE /users/123 HTTP/1.1
Host: www.example.com

PATCH:

Purpose: Apply partial modifications to a resource on the server.
Example: Updating only specific fields of an existing resource.
Usage:
PATCH /users/123 HTTP/1.1
Host: www.example.com
Content-Type: application/json
{"email": "newemail@example.com"}

HEAD:

Purpose: Retrieve the headers of a resource without the body content.
Example: Checking if a resource has been modified.
Usage:
HEAD /index.html HTTP/1.1
Host: www.example.com

OPTIONS:

Purpose: Retrieve the HTTP methods supported by a resource.
Example: Checking allowed methods for a specific endpoint.
Usage:
OPTIONS / HTTP/1.1
Host: www.example.com
These HTTP methods provide a standardized way for clients (such as browsers or applications) to interact with servers and perform actions on resources. Each method serves a specific purpose and is used based on the desired operation you want to perform on the server.